package br.edu.eseg.brproject.model;

// Generated May 29, 2011 12:04:47 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Type;
import org.hibernate.validator.NotNull;

/**
 * Solicitacaomudanca generated by hbm2java
 */
@Entity
@Table(name = "solicitacaomudanca")
public class Solicitacaomudanca implements java.io.Serializable,
		Comparable<Solicitacaomudanca> {

	private Long id;
	private Statusmudanca statusmudanca;
	private Projeto projeto;
	private Usuario usuario;
	private Date dataabertura;
	private Date datafechamento;
	private String descricao;
	private String justificativa;
	private String titulo;

	public Solicitacaomudanca() {
		dataabertura = new Date();
	}

	public Solicitacaomudanca(Statusmudanca statusmudanca, Projeto projeto,
			Usuario usuario, Date dataabertura, String descricao, String titulo) {
		this.statusmudanca = statusmudanca;
		this.projeto = projeto;
		this.usuario = usuario;
		this.dataabertura = dataabertura;
		this.descricao = descricao;
		this.titulo = titulo;
	}

	public Solicitacaomudanca(Statusmudanca statusmudanca, Projeto projeto,
			Usuario usuario, Date dataabertura, Date datafechamento,
			String descricao, String justificativa, String titulo) {
		this.statusmudanca = statusmudanca;
		this.projeto = projeto;
		this.usuario = usuario;
		this.dataabertura = dataabertura;
		this.datafechamento = datafechamento;
		this.descricao = descricao;
		this.justificativa = justificativa;
		this.titulo = titulo;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id")
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "statusmudancaid", nullable = false)
	@NotNull
	public Statusmudanca getStatusmudanca() {
		return this.statusmudanca;
	}

	public void setStatusmudanca(Statusmudanca statusmudanca) {
		this.statusmudanca = statusmudanca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "projetoid", nullable = false)
	@NotNull
	public Projeto getProjeto() {
		return this.projeto;
	}

	public void setProjeto(Projeto projeto) {
		this.projeto = projeto;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "usuarioid", nullable = false)
	@NotNull
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		this.usuario = usuario;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "dataabertura", nullable = false, length = 19, columnDefinition = "timestamp default CURRENT_TIMESTAMP")
	@NotNull
	public Date getDataabertura() {
		return this.dataabertura;
	}

	public void setDataabertura(Date dataabertura) {
		this.dataabertura = dataabertura;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "datafechamento", length = 19)
	public Date getDatafechamento() {
		return this.datafechamento;
	}

	public void setDatafechamento(Date datafechamento) {
		this.datafechamento = datafechamento;
	}

	@Column(name = "descricao", nullable = false)
	@Type(type = "text")
	@NotNull
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "justificativa")
	@Type(type = "text")
	public String getJustificativa() {
		return this.justificativa;
	}

	public void setJustificativa(String justificativa) {
		this.justificativa = justificativa;
	}

	@Column(name = "titulo", nullable = false)
	@NotNull
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Override
	public int compareTo(Solicitacaomudanca o) {
		if (dataabertura == null || o.dataabertura == null) {
			return 0;
		}
		return o.dataabertura.compareTo(dataabertura);
	}

}